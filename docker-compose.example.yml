version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: apps/blog-app-backend/Dockerfile
    container_name: blog-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # Format: postgresql://[user]:[password]@[host]:[port]/[db]?schema=[schema]
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@db:5432/smart-blogz?schema=public
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
      # URLs for OAuth and frontend communication
      - BACKEND_URL=${BACKEND_URL:-http://localhost:3000}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost}
    depends_on:
      - db
    networks:
      - blog-network

  frontend:
    build:
      context: .
      dockerfile: apps/blog-frontend/Dockerfile
    container_name: blog-frontend
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      # Backend URL for API calls
      - BACKEND_URL=${BACKEND_URL:-http://localhost:3000}
    depends_on:
      - backend
    networks:
      - blog-network

  db:
    image: postgres:17-alpine
    container_name: blog-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=smart-blogz
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blog-network

volumes:
  postgres_data:

networks:
  blog-network:
    driver: bridge
